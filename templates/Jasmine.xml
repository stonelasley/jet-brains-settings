<templateSet group="Jasmine">
  <template name="expectcalled" value="expect($END$).toHaveBeenCalled();" description="Jasmine expect.toHaveBeenCalled" toReformat="true" toShortenFQNames="true" />
  <template name="expectcalledwith" value="expect($TARGET$).toHaveBeenCalledWith($END$);" description="jasmine expect.toHaveBeenCalledWith(&lt;&gt;)" toReformat="false" toShortenFQNames="true">
    <variable name="TARGET" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="it" value="it('$SHOULD$', function() =&gt; {&#10;    $END$&#10;});" description="Jasmine IT Block" toReformat="true" toShortenFQNames="true">
    <variable name="SHOULD" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="expectb" value="expect($ACTUAL$).toBe($END$);" description="Jasmine expect.tobe" toReformat="true" toShortenFQNames="true">
    <variable name="ACTUAL" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="expecttruthy" value="expect($ACTUAL$).toBeTruthy();" description="Jasmine Expect Truthy" toReformat="false" toShortenFQNames="true">
    <variable name="ACTUAL" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="describe" value="describe('$WHAT$', function() {&#10;    $END$&#10;});" description="Jasmine 'describe' block (JavaScript)" toReformat="false" toShortenFQNames="true">
    <variable name="WHAT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
    </context>
  </template>
  <template name="beforeEach" value="beforeEach(function() {&#10;    $END$&#10;});" description="Jasmine 'beforeEach' block" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_EXPRESSION" value="true" />
    </context>
  </template>
  <template name="describeprop" value="describe('$PROP$', () =&gt; {&#10;    it('should return $PROP$', () =&gt; {&#10;        expect(_classUnderTest.$PROP$).toEqual(_$PROP$);&#10;    });&#10;});" description="" toReformat="true" toShortenFQNames="true">
    <variable name="PROP" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="itdone" value="it('$SHOULD$', (done) =&gt; {&#10;    $END$&#10;});" description="async it" toReformat="true" toShortenFQNames="true">
    <variable name="SHOULD" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>